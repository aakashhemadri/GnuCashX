---
name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
    paths-ignore:
      - '**.md'
      - 'resources/**'
      - 'hooks/**'
      - 'doc/**'
      - 'Makefile'
      - './github/**'
  workflow_dispatch:

jobs:
  test:
    name: Run flutter tests
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: 'stable'
          cache: true
          cache-key: flutter
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Disable analytics
        run: flutter config --no-analytics
        shell: bash

      - name: Retrieve dependencies
        run: flutter pub get
        shell: bash

      - name: Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Run tests
        run: flutter test
        shell: bash

  build:
    name: Build for Android & Web
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: 'stable'
          cache: true
          cache-key: flutter
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Disable analytics
        run: flutter config --no-analytics
        shell: bash

      - name: Retrieve dependencies
        run: flutter pub get
        shell: bash

      - name: Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Build apk
        run: flutter build apk
        shell: bash

      - name: Build for target appbundle
        run: flutter build appbundle
        shell: bash

      - name: Build for target Web
        run: flutter build web
        shell: bash

      - name: Tar files
        run: tar -cvf gnucashx-web.tar -C build/web/ .
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Android_Web
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            gnucashx-web.tar

  build-ios:
    name: Build for iOS
    runs-on: macos-latest
    needs: [test]
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: 'stable'
          cache: true
          cache-key: flutter
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Disable analytics
        run: flutter config --no-analytics
        shell: bash

      - name: Retrieve dependencies
        run: flutter pub get
        shell: bash

      - name: Generate code
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Build iOS target
        run: flutter build ios --release --no-codesign
        shell: bash

      - name: Tar files
        run: |
          cd /Users/runner/work/GnuCashX/GnuCashX/
          tar -cvf gnucashx-ios.tar build/ios/iphoneos/Runner.app
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: iOS
          path: gnucashx-ios.tar
  deploy:
    name: Deployments
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Get Commit SHA
        run: |
          set -x
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Create artifact directory
        run: mkdir -p artifacts
        shell: bash

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: gh-pages
      
      - name: Deploy Web
        env:
          TARGET_BRANCH: 'gh-pages'
        run: |
          cd gh-pages
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch
          git checkout $TARGET_BRANCH
          rm -rf app/latest/
          mkdir -p app/latest/
          7z x artifacts/Android_Web/gnucashx-web.tar -oapp/latest/
          git add app/latest
          git diff-index --quiet HEAD || git commit -am "ci: deploy web(${{ env.GIT_HASH }})"
          git push origin $TARGET_BRANCH

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, build-ios]
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'aakashhemadri/GnuCashX'
    steps:
      - name: Get tag name
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
        shell: bash

      - name: Create artifact directory
        run: mkdir -p artifacts
        shell: bash

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
 
      - name: Clean up artifacts
        run: |
          set -e
          mv artifacts/Android_Web/build/app/outputs/flutter-apk/app-release.apk gnucashx-${{ env.VERSION_TAG }}.apk
          sha=`sha256sum gnucashx-${{ env.VERSION_TAG }}.apk | awk '{ print $1 }'`
          echo "APK_SHA=$sha" >> $GITHUB_ENV

          mv artifacts/Android_Web/build/app/outputs/bundle/release/app-release.aab gnucashx-${{ env.VERSION_TAG }}.aab
          sha=`sha256sum gnucashx-${{ env.VERSION_TAG }}.aab | awk '{ print $1 }'`
          echo "AAB_SHA=$sha" >> $GITHUB_ENV

          mv artifacts/iOS/gnucashx-ios.tar gnucashx-ios-${{ env.VERSION_TAG }}.tar
          sha=`sha256sum gnucashx-ios-${{ env.VERSION_TAG }}.tar | awk '{ print $1 }'`
          echo "IOS_SHA=$sha" >> $GITHUB_ENV

          mv artifacts/Android_Web/gnucashx-web.tar gnucashx-web-${{ env.VERSION_TAG }}.tar
          sha=`sha256sum gnucashx-web-${{ env.VERSION_TAG }}.tar | awk '{ print $1 }'`
          echo "WEB_TAR_SHA=$sha" >> $GITHUB_ENV
        shell: bash

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: gh-pages
        
      - name: Deploy Web
        env:
          TARGET_BRANCH: 'gh-pages'
        run: |
          cd gh-pages
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch
          git checkout $TARGET_BRANCH
          rm -rf app/stable
          mkdir -p app/tag/${{ env.VERSION_TAG }} app/stable
          7z x ../gnucashx-web-${{ env.VERSION_TAG }}.tar -oapp/tag/${{ env.VERSION_TAG }}/
          7z x ../gnucashx-web-${{ env.VERSION_TAG }}.tar -oapp/stable/
          git add app/tag app/stable
          git diff-index --quiet HEAD || git commit -am "ci: deploy web(${{ env.GIT_HASH }}) as v${{ env.VERSION_TAG }}"
          git push origin $TARGET_BRANCH

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: GnuCashX ${{ env.VERSION_TAG }}
          body: |
            ---
            
            ### Deployments

            | Variant |
            | ------- |
            | [Web @ latest](https://gnucashx.aakashhemadri.com/app/latest) |
            | [Web @ stable](https://gnucashx.aakashhemadri.com/app/stable) |
            | [Web @ v${{ env.VERSION_TAG }}](https://gnucashx.aakashhemadri.com/app/tag/${{ env.VERSION_TAG}}) |

            ### Downloads

            | Variant | SHA-256 |
            | ------- | ------- |
            | [Android APK](https://github.com/aakashhemadri/GnuCashX/releases/download/${{ env.VERSION_TAG }}/gnucashx-${{ env.VERSION_TAG }}.apk) | ${{ env.APK_SHA }} |
            | [Android Bundle](https://github.com/aakashhemadri/GnuCashX/releases/download/${{ env.VERSION_TAG }}/gnucashx-${{ env.VERSION_TAG }}.aab) | ${{ env.AAB_SHA }} |
            | [iOS](https://github.com/aakashhemadri/GnuCashX/releases/download/${{ env.VERSION_TAG }}/gnucashx-ios-${{ env.VERSION_TAG }}.tar) | ${{ env.IOS_SHA }} |
            | [Web](https://github.com/aakashhemadri/GnuCashX/releases/download/${{ env.VERSION_TAG }}/gnucashx-web-${{ env.VERSION_TAG }}.apk) | ${{ env.WEB_TAR_SHA }} |
          files: |
            gnucashx-${{ env.VERSION_TAG }}.apk
            gnucashx-${{ env.VERSION_TAG }}.aab
            gnucashx-ios-${{ env.VERSION_TAG }}.tar
            gnucashx-web-${{ env.VERSION_TAG }}.tar
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
